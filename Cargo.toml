[package]
name = "arrow-wasm"
version = "0.0.13"
authors = ["Dominik Moritz <domoritz@gmail.com>"]
license = "MIT/Apache-2.0"
edition = "2018"
repository = "https://github.com/domoritz/arrow-wasm"
description = "Apache Arrow in WebAssembly"
categories = ["wasm"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

# disabling wasm opt on apple silicon
[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[dependencies]
arrow = { git = "https://github.com/apache/arrow" }
wasm-bindgen = { git = "https://github.com/rustwasm/wasm-bindgen", features = ["serde-serialize"] }
paste = "1.0"
js-sys = "*"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "*", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "*", optional = true }

[dependencies.web-sys]
version = "0.3"
features = ["console"]

[patch.crates-io]
wasm-bindgen = { git = 'https://github.com/rustwasm/wasm-bindgen' }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
# Smaller code size: https://rustwasm.github.io/book/reference/code-size.html
lto = true
